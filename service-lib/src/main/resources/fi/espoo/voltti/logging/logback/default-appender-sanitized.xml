<?xml version="1.0" encoding="UTF-8"?>

<!--
SPDX-FileCopyrightText: 2017-2020 City of Espoo

SPDX-License-Identifier: LGPL-2.1-or-later
-->

<!--
Sanitized default appender logback configuration provided for import
-->

<included>
  <conversionRule
    conversionWord="stacktrace"
    converterClass="net.logstash.logback.stacktrace.ShortenedThrowableConverter" />

  <appender name="VOLTTI_DEFAULT_APPENDER_SANITIZED" class="ch.qos.logback.core.ConsoleAppender">
    <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
      <evaluator class="ch.qos.logback.classic.boolex.OnMarkerEvaluator">
        <marker>AUDIT_EVENT</marker>
        <marker>VTJ_EVENT</marker>
      </evaluator>
      <onMismatch>NEUTRAL</onMismatch>
      <onMatch>DENY</onMatch>
    </filter>
    <!-- With a Composite encoder, desired fields need to be explicitly defined -->
    <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
      <jsonGeneratorDecorator class="net.logstash.logback.mask.MaskingJsonGeneratorDecorator">
        <!--Hide social security numbers from logs-->
        <valueMasker class="fi.espoo.voltti.logging.SsnMasker" />
      </jsonGeneratorDecorator>
      <providers>
        <logLevel><fieldName>logLevel</fieldName></logLevel>
        <loggerName><fieldName>loggerName</fieldName></loggerName>
        <throwableClassName><fieldName>exception</fieldName></throwableClassName>
        <timestamp>
          <fieldName>@timestamp</fieldName>
          <timeZone>UTC</timeZone>
          <pattern>yyyy-MM-dd'T'HH:mm:ss.sss'Z'</pattern>
        </timestamp>
        <pattern>
          <omitEmptyFields>true</omitEmptyFields>
          <pattern>
            {
            "message": "%message",
            "stackTrace": "%stacktrace",
            "type": "app-misc",
            "appBuild": "${APP_BUILD}",
            "appCommit": "${APP_COMMIT}",
            "appName": "${appName}",
            "env": "${VOLTTI_ENV}",
            "hostIp": "${HOST_IP}",
            "userIdHash": "%mdc{userIdHash}",
            "spanId": "%mdc{spanId}",
            "traceId": "%mdc{traceId}",
            "version": 1
            }
          </pattern>
        </pattern>
        <arguments />
      </providers>
    </encoder>
  </appender>
</included>
