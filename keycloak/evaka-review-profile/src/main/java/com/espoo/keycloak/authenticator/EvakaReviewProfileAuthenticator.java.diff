--- ../../../../../../../../update/IdpReviewProfileAuthenticator.java.22.0.3.orig	2023-09-13 17:28:43.032373490 +0300
+++ EvakaReviewProfileAuthenticator.java	2023-09-13 17:17:14.375025031 +0300
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package org.keycloak.authentication.authenticators.broker;
+package com.espoo.keycloak.authenticator;
 
 import org.jboss.logging.Logger;
 import org.keycloak.authentication.AuthenticationFlowContext;
@@ -41,19 +41,23 @@
 
 import jakarta.ws.rs.core.MultivaluedMap;
 import jakarta.ws.rs.core.Response;
-
+import java.util.ArrayList;
 import java.util.Collections;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.stream.Stream;
 
+import org.keycloak.authentication.authenticators.broker.AbstractIdpAuthenticator;
+import org.keycloak.authentication.AuthenticationFlowError;
+
 /**
  * @author <a href="mailto:mposolda@redhat.com">Marek Posolda</a>
+ * Modified from keycloak/services/src/main/java/org/keycloak/authentication/authenticators/broker/IdpReviewProfileAuthenticator.java
  */
-public class IdpReviewProfileAuthenticator extends AbstractIdpAuthenticator {
+public class EvakaReviewProfileAuthenticator extends AbstractIdpAuthenticator {
 
-    private static final Logger logger = Logger.getLogger(IdpReviewProfileAuthenticator.class);
+    private static final Logger logger = Logger.getLogger(EvakaReviewProfileAuthenticator.class);
 
     @Override
     public boolean requiresUser() {
@@ -88,10 +92,10 @@
 
         String updateProfileFirstLogin;
         AuthenticatorConfigModel authenticatorConfig = context.getAuthenticatorConfig();
-        if (authenticatorConfig == null || !authenticatorConfig.getConfig().containsKey(IdpReviewProfileAuthenticatorFactory.UPDATE_PROFILE_ON_FIRST_LOGIN)) {
+        if (authenticatorConfig == null || !authenticatorConfig.getConfig().containsKey(EvakaReviewProfileAuthenticatorFactory.UPDATE_PROFILE_ON_FIRST_LOGIN)) {
             updateProfileFirstLogin = IdentityProviderRepresentation.UPFLM_MISSING;
         } else {
-            updateProfileFirstLogin = authenticatorConfig.getConfig().get(IdpReviewProfileAuthenticatorFactory.UPDATE_PROFILE_ON_FIRST_LOGIN);
+            updateProfileFirstLogin = authenticatorConfig.getConfig().get(EvakaReviewProfileAuthenticatorFactory.UPDATE_PROFILE_ON_FIRST_LOGIN);
         }
 
         if(IdentityProviderRepresentation.UPFLM_MISSING.equals(updateProfileFirstLogin)) {
@@ -112,6 +116,25 @@
         EventBuilder event = context.getEvent();
         event.event(EventType.UPDATE_PROFILE).detail(Details.CONTEXT, UserProfileContext.IDP_REVIEW.name());
         MultivaluedMap<String, String> formData = context.getHttpRequest().getDecodedFormParameters();
+
+        // Modified logic so that username is always overwritten with email from the form.
+        boolean fail = false;
+        if (formData.containsKey("email") && formData.get("email").size() > 0) {
+            formData.put("username", formData.get("email"));
+        } else {
+            fail = true;
+        }
+
+        FormMessage emailError = null;
+        if (formData.getFirst("email") != null && !formData.getFirst("email").equals("")) {
+            if (!formData.getFirst("email").equals(formData.getFirst("emailConfirm"))) {
+                emailError = new FormMessage("email", "emailDoNotMatch");
+            }
+        }
+
+        formData.put("firstName", userCtx.getAttribute("firstName"));
+        formData.put("lastName", userCtx.getAttribute("lastName"));
+
         UserModelDelegate updatedProfile = new UserModelDelegate(null) {
 
             @Override
@@ -160,6 +183,7 @@
         attributes.putIfAbsent(UserModel.USERNAME, Collections.singletonList(updatedProfile.getUsername()));
         UserProfile profile = profileProvider.create(UserProfileContext.IDP_REVIEW, attributes, updatedProfile);
 
+        List<FormMessage> errors = null;
         try {
             String oldEmail = userCtx.getEmail();
 
@@ -170,8 +194,17 @@
                 }
             });
         } catch (ValidationException pve) {
-            List<FormMessage> errors = Validation.getFormErrorsFromValidation(pve.getErrors());
+            errors = Validation.getFormErrorsFromValidation(pve.getErrors());
+        }
+
+        if (emailError != null) {
+            if (errors == null) {
+                errors = new ArrayList<FormMessage>();
+            }
+            errors.add(emailError);
+        }
 
+        if (errors != null) {
             Response challenge = context.form()
                     .setErrors(errors)
                     .setAttribute(LoginFormsProvider.UPDATE_PROFILE_CONTEXT_ATTR, userCtx)
@@ -183,6 +216,11 @@
             return;
         }
 
+        if (fail) {
+            context.failure(AuthenticationFlowError.INTERNAL_ERROR);
+            return;
+        }
+
         userCtx.saveToAuthenticationSession(context.getAuthenticationSession(), BROKERED_CONTEXT_NOTE);
 
         logger.debugf("Profile updated successfully after first authentication with identity provider '%s' for broker user '%s'.", brokerContext.getIdpConfig().getAlias(), userCtx.getUsername());
